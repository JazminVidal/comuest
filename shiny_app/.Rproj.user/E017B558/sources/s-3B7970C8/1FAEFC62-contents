---
title: "Untitled"
author: "Jazmin"
date: "10/6/2022"
output: html_document
---

```{r}
library(ggplot2)

```

```{r setup, include=FALSE}
powerg <- function(n = 36, mu0 = 30, mu1 = 31, sd = 6, alpha = 0.10, 
                   alternative = c("two.sided", "less", "greater")){
  # Límites 
  ll <- min(mu0, mu1) - 3.4*sd/sqrt(n)
  ul <- max(mu0, mu1) + 3.4*sd/sqrt(n)
  p <- ggplot(data = data.frame(x = c(ll, ul)), aes(x = x))
  # Parametro de tipo de hipotesis alternativa
  alternative <- match.arg(alternative)
  
  # Calcula el test para varianza conocida para cada tipo de hipotesis alternativa
  
  if(alternative == "less")
  {dnorm_fun1 <- function(x){
   y <- dnorm(x, mu0, sd/sqrt(n))
   y[x > qnorm(alpha, mu0, sd/sqrt(n))] <- NA
   y}
    
  dnorm_fun2 <- function(x){
      y <- dnorm(x, mu1, sd/sqrt(n))
      y[x > qnorm(alpha, mu0, sd/sqrt(n))] <- NA
      y}
  
  dnorm_fun3 <- function(x){
      y <- dnorm(x, mu1, sd/sqrt(n))
      y[x < qnorm(alpha, mu0, sd/sqrt(n))] <- NA
      y}
    
    POWER <- round(pnorm(qnorm(alpha, mu0, sd/sqrt(n)), mu1, sd/sqrt(n)), 4)
    BETA <- round(1- POWER, 4)
    
  }else if(alternative == "greater"){
    dnorm_fun1 <- function(x){
    y <- dnorm(x, mu0, sd/sqrt(n))
    y[x < qnorm(1 - alpha, mu0, sd/sqrt(n))] <- NA
    y}
    dnorm_fun2 <- function(x){
    y <- dnorm(x, mu1, sd/sqrt(n))
    y[x < qnorm(1 - alpha, mu0, sd/sqrt(n))] <- NA
    y}
    dnorm_fun3 <- function(x){
      y <- dnorm(x, mu1, sd/sqrt(n))
      y[x > qnorm(1 - alpha, mu0, sd/sqrt(n))] <- NA
      y}
    POWER <- round(pnorm(qnorm(1- alpha, mu0, sd/sqrt(n)), mu1, sd/sqrt(n), lower.tail = FALSE), 4)
    BETA <- round(1- POWER, 4)
    
  } else if(alternative == "two.sided"){
    dnorm_fun1 <- function(x){
      y <- dnorm(x, mu0, sd/sqrt(n))
      y[x > qnorm(alpha/2, mu0, sd/sqrt(n)) & x < qnorm(1 - alpha/2, mu0, sd/sqrt(n))] <- NA
      y
    }
    dnorm_fun2 <- function(x){
      y <- dnorm(x, mu1, sd/sqrt(n))
      y[x > qnorm(alpha/2, mu0, sd/sqrt(n)) & x < qnorm(1 - alpha/2, mu0, sd/sqrt(n))] <- NA
      y
    }
    
    dnorm_fun3 <- function(x){
      y <- dnorm(x, mu1, sd/sqrt(n))
      y[x > qnorm(1 - alpha/2, mu0, sd/sqrt(n)) | x < qnorm(alpha/2, mu0, sd/sqrt(n))] <- NA
      y
    }
    
    POWER <- round(pnorm(qnorm(alpha/2, mu0, sd/sqrt(n)), mu1, sd/sqrt(n)) + pnorm(qnorm(1- alpha/2, mu0, sd/sqrt(n)), mu1, sd/sqrt(n), lower.tail = FALSE), 4)
    BETA <- round(1- POWER, 4)
  }
  
  
  p + stat_function(fun = dnorm_fun1, geom = "area", n = 1500, fill = "red", alpha = 0.95) +
    stat_function(fun = dnorm_fun2, geom = "area", n = 1500, fill = "blue", alpha = 0.4) +
    stat_function(fun = dnorm_fun3, geom = "area", n = 1500, fill = "green", alpha = 0.1) +
    stat_function(fun = dnorm, args = list(mu0, sd/sqrt(n)), n = 1500, color = "red") +
    stat_function(fun = dnorm, args = list(mu1, sd/sqrt(n)), n = 1500, color = "blue") +
    geom_hline(yintercept = 0) +
    theme_bw(base_size = 16) +
    labs(x = "", y = "", title = paste0("Potencia ","(",POWER,") es la suma de las áreas azul y rosa"),) +
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.caption = element_text(hjust = 0.5))  
}

```

```{r}
powerg(n = 100,
           sd = 6,
           mu0 = 20,
           mu1 = 30,
           alpha = 0.05,
           alternative = 'greater' )
```
