---
title: "Analisis de exportaciones de frutas de Argentina"
author: "Jazmín Vidal"
date: "2022-09-10"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
# Importamos las librerías a utilizar
#install.packages("remotes")
#remotes::install_github("davidsjoberg/ggsankey")
library(ggsankey)
library(ggplot2)
library(dplyr)
library(scales)  
library(tidyverse)
library(cowplot)
library(showtext)
showtext_auto()
```

## Introducción

Este es un ejercicio de visualización de datos con un dataset de exportación de frutas de Argentinas entre los años 2013 y 2017. El dataset se encuentra en la sección de Agroganadería, pesca y forestación de la [página de datos públicos de Argentina](https://datos.gob.ar) bajo el nombre de 'Frutas - Anuario de exportaciones'. Fue descargado el día 3 de septiembre de 2022 bajo el nombre 'exportaciones-de-frutas-del-anio-2013-al-2017.csv' y almacenado en la carpeta datos de este proyecto.

El dataset contiene 235 registros (omitiendo valores faltantes) con información sobre el país de origen y su identificador único, el producto exportado , el país de destino y su identificador único, el año de exportación, el total exportado en toneladas y el total exportado en dólares.

A continuación se cargan los datos y se imprime una muestra de las primeras 10 filas.

```{r}
df_frutas = read.csv('datos/exportaciones-de-frutas-del-anio-2013-al-2017.csv')
df_frutas = na.omit(df_frutas)
df_frutas
```

## Objetivos

En la primera parte se realiza un análisis exploratorio de los datos con el objetivo de entender el conjunto de datos de forma global. Para eso se realiza un grafico de exportaciones de frutas en dolares por anio desglosado por fruta, un grafico de exportaciones de frutas en toneladas desglosado por fruta y uno ultimo, similar, pero que grafica la exportacion anual por fruta en funcion del valor en dolares por tonelada. De estos graficos se oberva que las frutas que mas divisas ingresan son, en orden decreciente, la pera, el limon, el arandano y la manzana. En toneladas, la pera, el limon, la manzana y la mandarina. La relacion vista en funcion del ingreso en dolares por tonelada muestra que el arandano es la fruta mas eficiente de exportar. De estos graficos se selcciona cuatro frutas a analizar. Son: la pera, el limon, el arandano y la manzana.

Para estas cuatro frutas, se analiza la evolucion del valor medio de las exportaciones en dolares. Y para cada fruta el desvio de ese valor. Se hace con un grafico de lollipop.

Finalmente, para estas mismas frutas se analiza los paises importadores de forma global utilizando diagramas de Sankey. Estos diagramas permiten visualizar flujos. Distintas entidades se representan como rectangulos o texto y los vínculos entre ellas como arcos cuyo ancho varía de forma proporcional a la importancia de la relación. Más información se puede encontrar en <https://www.data-to-viz.com/graph/sankey.html>.

## Analisis exploratorio

Un análisis exploratorio de los datos permite ver que se exportan frutas a Estados Unidos, el Reino Unido, los Países Bajos, Alemania, Canadá, Brasil, Paraguay, Uruguay, Bolivia y Rusia, etc. Las frutas exportadas a estos países son arandano, ciruela, durazno, limón, mandarina, manzana, naranja, pera, pomelo y uva.

```{r}
df_frutas %>% distinct(pais_destino)
df_frutas %>% distinct(producto)
summary(df_frutas$totales_tn)
summary(df_frutas$totales_usd)
```

Por su parte, el rango de frutas exportadas en toneladas va entre 0 y 148206. Esto motiva a filtrar los dato. Con un promedio de 14126 toneladas exportadas y una mediana de 3978. Se toma la decisión de filtrar las exportaciones a aquellas mayores a 3000.

```{r}
df_frutas_fil = df_frutas %>%  filter(totales_tn>3000)
df_frutas_fil$totales_usd = round(df_frutas_fil$totales_usd,0)
df_frutas_fil
```

Se preparan dos conjuntos de datos a partir del conjunto de datos filtrado. Para el conjunto de datos filtrado, se ven los gráficos de evolución de exportación de frutas en toneladas y en dólares desglosados por tipo de fruta. Se puede ver que las frutas que más divisas netas ingresan son, en orden decreciente, la pera, el limón, el arandano y la manzana.

```{r}
data1 = df_frutas_fil %>% group_by(año, producto) %>% summarise(tot_dolar = sum(totales_usd)) 
p1 = data1 %>% ggplot(aes(año, tot_dolar, group = producto, col = producto)) +
  geom_line() +
  geom_point(shape=21, size=2) +
  scale_y_continuous(labels = comma) +
  ylab("USD totales")+
  theme_minimal() +
  ggtitle("Evolución de exportación de fruta en dólares por año")
p1
```

Y las frutas que más se exportan en toneladas son, en orden decreciente, la pera, el limón, la naranja y la manzana.

```{r}
data2 = df_frutas_fil %>% group_by(año, producto) %>% summarise(tot_tons = sum(totales_tn)) 
p2 = data2 %>% ggplot(aes(año, tot_tons, group = producto, col = producto)) + 
  geom_line() +
  geom_point(shape=21, size=2) +
  scale_y_continuous(labels = comma_format(big.mark = ".",
                                           decimal.mark = ",")) +
  ylab("Toneladas totales")+
  theme_minimal() +
  ggtitle("Evolución de exportación de fruta en toneladas por año")
p2
```

Se observa que el arándano ocupa un lugar alto en cuanto a ingreso de divisas, pero menor, debido a su tamaño en relación a las toneladas de exportación. Esto lleva a crear una nueva variable que mida la relación a lo largo de los años de exportación de frutas en dolares por tonelada. El ranking de exportaciones que obtenemos ahora es, en orden decreciente, arandanos, limon, pera y manzana.

```{r}
data3 = df_frutas_fil %>% mutate(dol_per_ton = totales_usd/totales_tn)
p3 = data3 %>% group_by(año, producto) %>% summarise(tot_val = sum(dol_per_ton)) %>% ggplot(aes(año, tot_val, group = producto, col = producto)) + 
  geom_line() +
  geom_point(shape=21, size=2) +
  scale_y_continuous(labels = comma_format(big.mark = ".",
                                           decimal.mark = ",")) +
  ylab("Dolar por tonelada")+
  theme_minimal() +
  ggtitle("Evolución de exportación de fruta en dolar por tonelada por año")
p3
```

A continuacion filtramos los datos para obtener un nuevo dataset igual al orignal pero solo seleccionado las cuatro frutas de interes.

```{r}
# Filtramos los datos para tener información de peras, arandanos, limones y manzanas
df_top_frutas = df_frutas_fil %>% filter(grepl('Limon|Arandano|Pera|Manzana', producto))
df_top_frutas
```

Utilizamos este dataset para construir los dos datasets que serviran para las siguientes etapas.

## Parte 2: grafico lollipop

Primero preparamos los datos conforme a lo esperado por el grafico. Necesitamos una columna por anio, para cada anio la fruta y el valor total en dolares para esa fruta

```{r}
df = df_top_frutas %>% group_by(año, producto) %>% mutate(tot_usd_fruta = sum(totales_usd),tot_ton_fruta = sum(totales_tn))
df
df2 = df %>% group_by(año, producto, tot_usd_fruta, tot_ton_fruta) %>% summarize()
df2 = cbind(df2, id=seq(1:20))
df2
```

```{r}
      
df_frutas_avg <-
  df2%>% 
  arrange(año, producto) %>% 
  group_by(año) %>% 
  mutate(
    avg = mean(tot_usd_fruta),
    fruta_mod = id + (9 * año),
    mid = mean(fruta_mod)
  ) %>% 
  ungroup() %>% 
  mutate(año = factor(año))


df_frutas_avg
```

Now we construct the data frame used to plot the horizontal lines with the mean rating per season, given by `start_x` and `end_x`. This data frame also includes the values we need to add the line connecting mean ratings for contiguous seasons in `x` and `y`.

```{r}
df_lines <-
df_frutas_avg %>% 
  group_by(año) %>% 
  summarize(
    start_x = min(fruta_mod) - 5,
    end_x = max(fruta_mod) + 5,
    y = unique(avg)
  ) %>% 
  pivot_longer(
    cols = c(start_x, end_x),
    names_to = "type",
    values_to = "x"
  ) %>% 
  mutate(
    x_group = if_else(type == "start_x", x + .1, x - .1),
    x_group = if_else(type == "start_x" & x == min(x), x_group - .1, x_group),
    x_group = if_else(type == "end_x" & x == max(x), x_group + .1, x_group)
  )
```

Let's build the chart. We are doing it in a step-by-step fashion, adding comments to explain what we are adding each time.

```{r}
# First, horizontal lines that are used as scale reference. 
# They are added first to ensure they stay in the background.
p <- df_frutas_avg %>% 
  ggplot(aes(fruta_mod, tot_usd_fruta)) +
    geom_hline(
      data = tibble(y = 7:10),
      aes(yintercept = y),
      color = "grey82",
      size = .5
    ) +
  scale_y_continuous(labels = comma_format(big.mark = ".")) 

# Add vertical segments. 
# These represent the deviation of episode's rating from the mean rating of 
# the season they appeared.
p2 = p + 
  geom_segment(
    aes(
      xend = fruta_mod,
      yend = avg, 
      color = producto, 
      color = after_scale(colorspace::lighten(color, .2))
    )
  )

# Add lines and dots.
# These represent the mean rating per season. 
# The dots mark each episode's rating, with its size given by the number of votes.
p3 <- p2 + 
  geom_line(
    data = df_lines,
    aes(x, y),
    color = "grey40"
  ) +
  geom_line(
    data = df_lines,
    aes(
      x_group, 
      y, 
      color = año, 
      color = after_scale(colorspace::darken(color, .2))
    ),
    size = 0.5
  ) + 
 geom_point(size = 0.0,
            aes(color = producto)
  ) 

p4 <- p3 + 
  geom_label(
    aes(
      mid, 
      09.12, # vertical position of labels
      label = glue::glue("{año} "),
      color = año, 
      color = after_scale(colorspace::darken(color, .2))
    ),
    fill = NA,
    family = "sans",
    fontface = "bold",
    label.padding = unit(.2, "lines"),
    label.r = unit(.25, "lines"), # radius of the rounder corners.
    label.size = .5
  ) 

# Scale and labels customization.
# Override default colors with a much better looking palette.
p5 <- p4 +    
      scale_color_manual(
      values = c("#000000","#004949","#009292","#ff6db6","#ffb6db",
 "#490092","#006ddb","#b66dff","#6db6ff","#b6dbff",
 "#920000","#924900","#db6d00","#24ff24","#ffff6d"),
      guide = 'none' # don't show guide for the color scale.
    ) +
  
    scale_size_binned(name = "Toneladas", range = c(.3, 3)) +
    labs(
      x = NULL, 
      y = "Dolares",
    ) +
    guides(
      size = guide_bins(
        show.limits = TRUE,
        direction = "horizontal",
        title.position = "top",
        title.hjust = .5
      )
    ) +
   
  geom_point(
    aes(size = tot_ton_fruta, color = producto)
  ) +
 theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(), 
       panel.background = element_rect(fill = "white", colour = "grey50"), 
       legend.position = c(.95, .95),
  legend.justification = c("right", "top"),
  legend.box.just = "right") 

p5
```

## Parte 2: Diagramas de Sankey

Se realiza el diagrama de Sankey con el poaquete ggsankey de ggplot2. El objetivo es dar una representación visual del flujo de cada fruta hacia su país importador, primero de forma global para todos los años, luego para cada año del conjunto de datos por separado. Para eso es necesario filtrar los datos a graficar

```{r}
# Limpiamos las columnas que no queremos utilizar
df_top_frutas_clean = df_top_frutas %>% select(producto,pais_destino)
df_top_frutas_clean
```

y transformarlos de acuerdo a lo que espera el paquete ggsankey para crear el diagrama

```{r}
df_frutas_sankey = df_top_frutas_clean %>% make_long(producto, pais_destino)
df_frutas_sankey
```

```{r}
pl <- ggplot(df_frutas_sankey, aes(x = x
                     , next_x = next_x
                     , node = node
                     , next_node = next_node
                     , fill = factor(node)
                     , label = node)
             )
pl <- pl +geom_sankey(flow.alpha = 0.5
                      , node.color = "black"
                      ,show.legend = FALSE)
pl <- pl +geom_sankey_label(size = 3, color = "black", fill= "white", hjust = -0.5)
pl <- pl +  theme_bw()

pl <- pl + theme(legend.position = "none")

pl <- pl +  theme(axis.title = element_blank()
                  , axis.text.y = element_blank()
                  , axis.ticks = element_blank()  
                  , panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Sankey diagram using ggplot")
pl <- pl + labs(fill = 'Nodes')
pl

```

Esto hecho para cada año

```{r}
df_top_frutas %>% group_by(año) %>% filter(grepl('Limon|Arandano|Pera|Manzana', producto)) %>% select(producto,pais_destino) %>% make_long(producto, pais_destino) %>% ggplot(aes(x = x
                     , next_x = next_x
                     , node = node
                     , next_node = next_node
                     , fill = factor(node)
                     , label = node)
             ) +
  geom_sankey(flow.alpha = 0.5
                      , node.color = "black"
                      ,show.legend = FALSE)

```
